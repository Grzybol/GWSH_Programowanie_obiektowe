using System;

public class MazeSolver
{
    public string MazeRunner(int[,] maze, string[] directions)
    {
        int x = -1, y = -1;
        for (int i = 0; i < maze.GetLength(0); i++)
        {
            for (int j = 0; j < maze.GetLength(1); j++)
            {
                if (maze[i, j] == 2)
                {
                    x = i;
                    y = j;
                    break;
                }
            }
        }
        if (x == -1 || y == -1)
        {
            return "No start position found";
        }
        foreach (string direction in directions)
        {
            switch (direction)
            {
                case "N":
                    x--;
                    break;
                case "S":
                    x++;
                    break;
                case "E":
                    y++;
                    break;
                case "W":
                    y--;
                    break;
            }


            if (x < 0 || y < 0 || x >= maze.GetLength(0) || y >= maze.GetLength(1))
            {
                return "Dead";
            }


            if (maze[x, y] == 3)
            {
                return "Finish";
            }


            if (maze[x, y] == 1)
            {
                return "Dead";
            }
        }


        return "Lost";
    }

    public static void Main(string[] args)
    {
        int[,] maze = {
            { 1, 1, 1, 1, 1, 1, 1 },
            { 1, 0, 0, 0, 0, 0, 3 },
            { 1, 0, 1, 0, 1, 0, 1 },
            { 0, 0, 1, 0, 0, 0, 1 },
            { 1, 0, 1, 0, 1, 0, 1 },
            { 1, 0, 0, 0, 0, 0, 1 },
            { 1, 2, 1, 0, 1, 0, 1 }
        };

        string[] directions = { "N", "N", "N", "N", "N", "E", "E", "E", "E", "E" };
        MazeSolver solver = new MazeSolver();
        string result = solver.MazeRunner(maze, directions);
        Console.WriteLine($"Result: {result}");
    }
}